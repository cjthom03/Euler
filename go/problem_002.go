package main
import "fmt"

// Problem 2
// Even Fibonacci numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

func main() {
  //fmt.Println(sum_of_even_fibs_up_to(25))
    //=> 10

  fmt.Println(sum_of_even_fibs_up_to(4000000))
    //=> ?? 
}

func sum_of_even_fibs_up_to(max int) int {
  var sum, n1, n2 int = 0, 0, 1
  var next_fib int
  
  for n2 < max {
    if (n2 % 2 == 0) {  
      sum += n2 
    }
   
    next_fib = n1 + n2
    n1, n2 = n2, next_fib
  }

 return sum
}
