# Problem 2
# Even Fibonacci numbers

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def run
  sum_of_even_fib_up_to(4_000_000)
end

def sum_of_even_fib_up_to(max)
  fibs_up_to(max).select(&:even?).reduce(:+)
end

def fibs_up_to(num)
  return [] if num <= 1
  return [1] if num == 2

  arr = [1, 2]
 
  while arr[-1] + arr[-2] < num
    arr << arr[-1] + arr[-2]
  end

  arr
end


if __FILE__ == $0 
  puts run
 # puts fibs_up_to(90)  
end
